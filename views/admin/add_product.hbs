<style>
    .cropper-container {
        margin: 0 auto 20px auto;
    }
</style>


{{!-- HEADER --}}

<div class="mobile-menu-overlay"></div>

<div class="main-container">
    <div class="pd-ltr-20 xs-pd-20-10">
        <div class="min-height-200px">
            <div class="page-header">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <div class="title">
                            <h4>ADD PRODUCT</h4>
                        </div>

                    </div>
                    <div class="col-md-6 col-sm-12 text-right">
                        <div class="dropdown">

                        </div>
                    </div>
                </div>
            </div>
            <!-- Default Basic Forms Start -->
            <div class="pd-20 card-box mb-30">
                <div class="clearfix">
                    <div class="pull-left">
                        <h4 class="text-blue h4"></h4>
                    </div>

                </div>
                <form action="/admin/add_product" enctype="multipart/form-data" method="POST" id="form_id">
                    <div class="form-group">
                        <label for="exampleInputEmail1">Name</label>
                        <input type="name" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp"
                            placeholder="name" name="name">
                        <small id="emailHelp" class="form-text text-muted"></small>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Price</label>
                        <input type="number" class="form-control" id="exampleInputmobile" placeholder="price"
                            name="Price">
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Quantity</label>
                        <input type="number" class="form-control" id="exampleInputPassword1" placeholder="quantity"
                            name="quantity">
                    </div>

                    <div class="form-group">
                        <label>Category</label> <label> <a href="/admin/add_catagory"
                                class="btn btn-outline-success">Add catagory</a></label>

                        <select name="catagory" class="form-control">
                            {{#each catagory}}
                            <option>{{this.catagory}}</option>
                            {{/each}}

                        </select>


                    </div>

                    <div class="form-group">
                        <label>Brand</label> <label> <a href="/admin/add_brand" class="btn btn-outline-success">Add
                                brand</a></label>

                        <select name="brand" class="form-control">
                            {{#each brand}}
                            <option>{{this.brand}}</option>
                            {{/each}}

                        </select>


                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">Description</label>
                        <input type="text" class="form-control"  name="description" id="exampleInputdescription" placeholder="description" >
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword1">Date</label>
                        <input type="date" class="form-control" name="date" id="exampleInputdate" placeholder="Date" >
                    </div>

                    <div class="col-12">
                        <div id="image-box" style="width: 500px; height: 500px; display: none;"></div>
                        <button class="btn btn-primary mt-3" type="button" style="display: none;"
                            id="crop-btn">Crop</button>
                    </div>

                    <div class="mt-5">
                        <label for="">IMAGE 1</label>
                        <img src="" alt="" style="width: 100px; height:auto" id="imgview1">
                        {{!-- <div id="preview1"></div> --}}
                        <input type="file" name="image1" id="file1" class="form-control"
                            onchange="return fileValidation1()">
                    </div>

                    <div class="mt-5">
                        <label for="">IMAGE 2</label>
                        <img src="" alt="" style="width: 100px; height:auto" id="imgview2">
                        {{!-- <div id="preview1"></div> --}}
                        <input type="file" name="image2" id="file2" class="form-control"
                            onchange="return fileValidation2()">
                    </div>


                    <div class="mt-5">
                        <label for="">IMAGE 3</label>
                        <img src="" alt="" style="width: 100px; height:auto" id="imgview3">
                        {{!-- <div id="preview1"></div> --}}
                        <input type="file" name="image3" id="file3" class="form-control"
                            onchange="return fileValidation3()">
                    </div>


            </div>

        </div>
    </div>



    <h6 id="not-img1-error" style="color: rgb(163, 24, 24);display: none;">!! Please upload a
        image !!</h6>


    <button id="confirm-btn" type="submit" class="btn btn-primary">Add Product</button><br>
</div>


<br>
<br>
<br>

<!-- Default Basic Forms End -->

<!-- Input Validation End -->
<!-- js -->
<script src="/vendors/scripts/core.js"></script>
<script src="/vendors/scripts/script.min.js"></script>
<script src="/vendors/scripts/process.js"></script>
<script src="/vendors/scripts/layout-settings.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.0.0/cropper.min.js"></script>
{{!--
<script src="./js/cropper.js"></script> --}}




<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

<script>

    function fileValidation1() {
        const imagebox = document.getElementById('image-box')
        const crop_btn = document.getElementById('crop-btn')
        var fileInput = document.getElementById('file1');

        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('Please upload file having extensions .jpeg only.');
            fileInput.value = '';
            return false;
        } else {
            //Image preview
            const img_data = fileInput.files[0]
            const url = URL.createObjectURL(img_data)
            imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
            const image = document.getElementById('image')
            document.getElementById('image-box').style.display = 'block'
            document.getElementById('crop-btn').style.display = 'block'
            document.getElementById('confirm-btn').style.display = 'none'

            const cropper = new Cropper(image, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                aspectRatio: 16 / 19,
                //  preview: '.preview',
                minCropBoxWidth: 180,
                minCropBoxHeight: 240,
            })
            crop_btn.addEventListener('click', () => {
                cropper.getCroppedCanvas().toBlob((blob) => {
                    let fileInputElement = document.getElementById('file1');
                    let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                    let container = new DataTransfer();

                    container.items.add(file);
                    const img = container.files[0]
                    var url = URL.createObjectURL(img)
                    fileInputElement.files = container.files;
                    document.getElementById('imgview1').src = url
                    document.getElementById('image-box').style.display = 'none'
                    document.getElementById('crop-btn').style.display = 'none'
                    document.getElementById('confirm-btn').style.display = 'block'
                });
            });
        }
    }


</script>



<script>

    function fileValidation2() {
        const imagebox = document.getElementById('image-box')
        const crop_btn = document.getElementById('crop-btn')
        var fileInput = document.getElementById('file2');

        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('Please upload file having extensions .jpeg only.');
            fileInput.value = '';
            return false;
        } else {
            //Image preview
            const img_data = fileInput.files[0]
            const url = URL.createObjectURL(img_data)
            imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
            const image = document.getElementById('image')
            document.getElementById('image-box').style.display = 'block'
            document.getElementById('crop-btn').style.display = 'block'
            document.getElementById('confirm-btn').style.display = 'none'

            const cropper = new Cropper(image, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                aspectRatio: 16 / 19,
                //  preview: '.preview',
                minCropBoxWidth: 180,
                minCropBoxHeight: 240,
            })
            crop_btn.addEventListener('click', () => {
                cropper.getCroppedCanvas().toBlob((blob) => {
                    let fileInputElement = document.getElementById('file2');
                    let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                    let container = new DataTransfer();

                    container.items.add(file);
                    const img = container.files[0]
                    var url = URL.createObjectURL(img)
                    fileInputElement.files = container.files;
                    document.getElementById('imgview2').src = url
                    document.getElementById('image-box').style.display = 'none'
                    document.getElementById('crop-btn').style.display = 'none'
                    document.getElementById('confirm-btn').style.display = 'block'
                });
            });
        }
    }


</script>



<script>

    function fileValidation3() {
        const imagebox = document.getElementById('image-box')
        const crop_btn = document.getElementById('crop-btn')
        var fileInput = document.getElementById('file3');

        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('Please upload file having extensions .jpeg only.');
            fileInput.value = '';
            return false;
        } else {
            //Image preview
            const img_data = fileInput.files[0]
            const url = URL.createObjectURL(img_data)
            imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
            const image = document.getElementById('image')
            document.getElementById('image-box').style.display = 'block'
            document.getElementById('crop-btn').style.display = 'block'
            document.getElementById('confirm-btn').style.display = 'none'

            const cropper = new Cropper(image, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                aspectRatio: 16 / 19,
                //  preview: '.preview',
                minCropBoxWidth: 180,
                minCropBoxHeight: 240,
            })
            crop_btn.addEventListener('click', () => {
                cropper.getCroppedCanvas().toBlob((blob) => {
                    let fileInputElement = document.getElementById('file3');
                    let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                    let container = new DataTransfer();

                    container.items.add(file);
                    const img = container.files[0]
                    var url = URL.createObjectURL(img)
                    fileInputElement.files = container.files;
                    document.getElementById('imgview3').src = url
                    document.getElementById('image-box').style.display = 'none'
                    document.getElementById('crop-btn').style.display = 'none'
                    document.getElementById('confirm-btn').style.display = 'block'
                });
            });
        }
    }


</script>




<script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.js"></script>

<script>
    $(document).ready(function () {
        $("#form_id").validate({
            rules: {
                name: {
                    required: true,
                    minlength: 3
                },
                Price: {
                    required: true,

                },
                quantity: {
                    required: true,


                },
                description: {
                    required: true,

                },
                date: {
                    required: true,

                },
                description:{
                    required:true
                },
                image1: {
                    required: true,

                },
                image2: {
                    required: true,

                },
                image3: {
                    required: true,

                }

            }
        })
    })


</script>

<style>
    .error{
        color: red;
    }
</style>























































{{!--
<script>
    function firstImage() {
        let result = document.querySelector('.result'),
            save = document.querySelector('.save'),
            cropped = document.querySelector('.img1Disp'),
            upload = document.querySelector('#fileupload1'),
            cropper = '';
        upload.addEventListener('change', (e) => {
            if (e.target.files.length) {
                // start file reader
                const reader = new FileReader();
                reader.onload = (e) => {
                    if (e.target.result) {
                        // create new image
                        $("#exampleModalCenter").modal("show");
                        let img = document.createElement('img');
                        img.id = 'image';
                        img.src = e.target.result
                        // clean result before
                        result.innerHTML = '';
                        // append new image
                        result.appendChild(img);
                        // init cropper
                        cropper = new Cropper(img, {
                            viewMode: 2,
                            aspectRatio: 5 / 7,
                            autoCropArea: 1,
                            cropBoxResizable: false,
                            crop: function (e) {
                                console.log(e.detail.x);
                                console.log(e.detail.y);
                            }
                        });
                    }
                };
                reader.readAsDataURL(e.target.files[0]);
            }
        });

        save.addEventListener('click', (e) => {
            e.preventDefault();
            // get result to data uri
            let imgSrc = cropper.getCroppedCanvas({
                width: 300 // img disp value
            }).toDataURL();
            $("#exampleModalCenter").modal("hide");
            console.log('src', imgSrc)
            console.log('image', cropped.src)
            cropped.src = imgSrc;
            console.log('imagee', cropped.src)
            $("#imageBase64Data1").val(imgSrc);
            var base = document.getElementById('imageBase64Data1').value
            console.log(base)
        });
    }
</script>

<script>
    function secondImage() {
        let result = document.querySelector('.result'),
            save = document.querySelector('.save'),
            cropped = document.querySelector('.img2Disp'),
            upload = document.querySelector('#fileupload2'),
            cropper = '';
        upload.addEventListener('change', (e) => {
            if (e.target.files.length) {
                // start file reader
                const reader = new FileReader();
                reader.onload = (e) => {
                    if (e.target.result) {
                        // create new image
                        $("#exampleModalCenter").modal("show");
                        let img = document.createElement('img');
                        img.id = 'image';
                        img.src = e.target.result
                        // clean result before
                        result.innerHTML = '';
                        // append new image
                        result.appendChild(img);
                        // init cropper
                        cropper = new Cropper(img, {
                            viewMode: 2,
                            aspectRatio: 5 / 7,
                            autoCropArea: 1,
                            cropBoxResizable: false,
                            crop: function (e) {
                                console.log(e.detail.x);
                                console.log(e.detail.y);
                            }
                        });
                    }
                };
                reader.readAsDataURL(e.target.files[0]);
            }
        });
        save.addEventListener('click', (e) => {
            e.preventDefault();
            // get result to data uri
            let imgSrc = cropper.getCroppedCanvas({
                width: 300 // img disp value
            }).toDataURL();
            $("#exampleModalCenter").modal("hide");
            console.log('src', imgSrc)
            cropped.src = imgSrc;
            console.log('imagee', imgSrc)
            $("#imageBase64Data2").val(imgSrc);
            var base = document.getElementById('imageBase64Data2').value
            console.log(base)
        });
    }
</script>

<script>
    function thirdImage() {
        let result = document.querySelector('.result'),
            save = document.querySelector('.save'),
            cropped = document.querySelector('.img3Disp'),
            upload = document.querySelector('#fileupload3'),
            cropper = '';
        upload.addEventListener('change', (e) => {
            if (e.target.files.length) {
                // start file reader
                const reader = new FileReader();
                reader.onload = (e) => {
                    if (e.target.result) {
                        // create new image
                        $("#exampleModalCenter").modal("show");
                        let img = document.createElement('img');
                        img.id = 'image';
                        img.src = e.target.result
                        // clean result before
                        result.innerHTML = '';
                        // append new image
                        result.appendChild(img);
                        // init cropper
                        cropper = new Cropper(img, {
                            viewMode: 2,
                            aspectRatio: 5 / 7,
                            autoCropArea: 1,
                            cropBoxResizable: false,
                            crop: function (e) {
                                console.log(e.detail.x);
                                console.log(e.detail.y);
                            }
                        });
                    }
                };
                reader.readAsDataURL(e.target.files[0]);
            }
        });
        save.addEventListener('click', (e) => {
            e.preventDefault();
            // get result to data uri
            let imgSrc = cropper.getCroppedCanvas({
                width: 300 // img disp value
            }).toDataURL();
            $("#exampleModalCenter").modal("hide");
            console.log('src', imgSrc)
            cropped.src = imgSrc;
            console.log('imagee', imgSrc)
            $("#imageBase64Data3").val(imgSrc);
            var base = document.getElementById('imageBase64Data3').value
            console.log(base)
        });
    }
</script>

<script>
    function viewImage1(event) {
        document.getElementById('img1Disp').src = URL.createObjectURL(event.target.files[0])
        let file = event.target.files[0].name
        let filename = file.split('.').pop()
        if (filename == 'jpeg' || filename == 'png' || filename == 'jpg') {
            $('#add-product-button').show()
            $('#not-img1-error').hide()
            $('#img1Disp').show()
            $('#exampleModalCenter').show()
        } else {
            $('#not-img1-error').show()
            $('#add-product-button').hide()
            $('#img1Disp').hide()
            $('#exampleModalCenter').hide()
        }
    }
</script>

<script>
    function viewImage2(event) {
        document.getElementById('img2Disp').src = URL.createObjectURL(event.target.files[0])
        let file = event.target.files[0].name
        let filename = file.split('.').pop()
        if (filename == 'jpeg' || filename == 'png' || filename == 'jpg') {
            $('#add-product-button').show()
            $('#not-img2-error').hide()
            $('#img2Disp').show()
        } else {
            $('#not-img2-error').show()
            $('#add-product-button').hide()
            $('#img2Disp').hide()
            $('#exampleModalCenter').unload()
        }
    }
</script>

<script>
    function viewImage3(event) {
        document.getElementById('img3Disp').src = URL.createObjectURL(event.target.files[0])
        let file = event.target.files[0].name
        let filename = file.split('.').pop()
        if (filename == 'jpeg' || filename == 'png' || filename == 'jpg') {
            $('#add-product-button').show()
            $('#not-img3-error').hide()
            $('#img3Disp').show()
        } else {
            $('#not-img3-error').show()
            $('#add-product-button').hide()
            $('#img3Disp').hide()
            $('#exampleModalCenter').hide()
        }
    }
</script> --}}